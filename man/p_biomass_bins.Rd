% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/p-biomass-bins.R,
%   R/p-biomass-bins.size_spectrum_mlebin.R,
%   R/p-biomass-bins.size_spectrum_numeric.R
\name{p_biomass_bins}
\alias{p_biomass_bins}
\alias{p_biomass_bins.size_spectrum_mlebin}
\alias{p_biomass_bins.size_spectrum_numeric}
\title{Total and normalised biomass in each bin for a fitted distribution and given
bin breaks}
\usage{
p_biomass_bins(res)

\method{p_biomass_bins}{size_spectrum_mlebin}(res_mlebin)

\method{p_biomass_bins}{size_spectrum_numeric}(res_mle)
}
\arguments{
\item{res}{results list, of either class \code{size_spectrum_numeric} or
\code{size_spectrum_mlebin}.}

\item{bin_vals}{either a \code{numeric} vector of bin breaks, or a \code{data.frame} that
contains columns \code{bin_min} and \code{bin_max} (and possibly more; e.g. the
format of the \code{bin_vals} component output from \code{\link[=bin_data]{bin_data()}}.
Either \code{p_biomass_bins.numeric()} or \code{p_biomass_bins.data.frame()} gets called
appropriately.}

\item{n}{total number of individuals in the system (needed to calculate
biomass), TODO change when resolve #5 as n will be in results.}

\item{...}{arguments to pass onto bin_data at least}
}
\value{
tibble like that returned in \verb{$data} object from
\code{\link[=fit_size_spectrum.data.frame]{fit_size_spectrum.data.frame()}}  (TODO if just size_spectrum_numeric
entered then columns are a bit less), with extra columns appended here
giving, for each bin:
\itemize{
\item median: median of the data
\item eti_lower: lower end of the ETI
}

TODO: somethin like:
then  with each row corresponding to a bin, and columns \code{wmin},
\code{wmax},  \code{binWidth}, \code{estBiomass}, and \code{estBiomassNorm}. If the input is a tibble with
columns \code{wmin} and \code{wmax} (or \code{binMin} and \code{binMax}), then
columns \code{estBiomass} and \code{estBiomassNorm} are appended to the input tibble.
}
\description{
For size_spectrum_numeric we know all the individual body sizes, so there is
no uncertainty in the biomass within each bin. So setting high and low
biomasses to be the same.
}
\details{
HERE HERE
TODO TODO - actually, input the results list (since we have b and conf ints
and data all in there), and then do two different methods dependent upon the
class of the results.
}
\examples{
\dontrun{
# TODO
binBreaks = c(1, 10, 20, 50, 100)
pBiomassBins(binBreaks = binBreaks) # uses default pBiomass() values

# Same data as a tibble:
testTibble <- dplyr::tibble(binMin = binBreaks[-length(binBreaks)],
                            binMax = binBreaks[-1])
pBiomassBins(binValsTibble = testTibble)
}

}
\author{
Andrew Edwards
}
